name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**/*.ts'
      - 'eslint-plugins/**/*.ts'
      - 'scripts/**/*.ts'
  workflow_dispatch:

jobs:
  update-docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate documentation
      run: |
        npm run docs:generate
        npm run docs:simple

    - name: Check for documentation changes
      id: docs-changes
      run: |
        if git diff --quiet; then
          echo "No documentation changes"
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "Documentation has been updated"
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push documentation updates
      if: steps.docs-changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md docs/
        git commit -m "docs: auto-update documentation [skip ci]"
        git push

    - name: Create documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: |
          README.md
          docs/
        retention-days: 30

  validate-jsdoc:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate JSDoc coverage report
      run: |
        echo "# JSDoc Coverage Report" > jsdoc-coverage.md
        echo "" >> jsdoc-coverage.md
        echo "Generated on: $(date)" >> jsdoc-coverage.md
        echo "" >> jsdoc-coverage.md

        # Count functions with and without JSDoc
        TOTAL_FUNCTIONS=$(grep -r "function\|=>" src/ eslint-plugins/ scripts/ --include="*.ts" | wc -l)
        echo "Total functions found: $TOTAL_FUNCTIONS" >> jsdoc-coverage.md

        # This is a simplified check - in real scenario you'd parse AST
        echo "" >> jsdoc-coverage.md
        echo "## Files checked:" >> jsdoc-coverage.md
        find src/ eslint-plugins/ scripts/ -name "*.ts" -exec echo "- {}" \; >> jsdoc-coverage.md

    - name: Upload JSDoc coverage report
      uses: actions/upload-artifact@v4
      with:
        name: jsdoc-coverage-report
        path: jsdoc-coverage.md
        retention-days: 30

  check-links:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install markdown-link-check
      run: npm install -g markdown-link-check

    - name: Check links in README
      run: |
        if [ -f README.md ]; then
          markdown-link-check README.md --config .github/markdown-link-check.json || true
        fi

    - name: Check links in documentation
      run: |
        if [ -d docs ]; then
          find docs -name "*.md" -exec markdown-link-check {} \; || true
        fi

  spell-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install cspell
      run: npm install -g cspell

    - name: Spell check documentation
      run: |
        # Create basic cspell config
        cat > .cspell.json << EOF
        {
          "version": "0.2",
          "language": "en,ru",
          "words": [
            "jsdoc", "eslint", "vitest", "codecov", "npm", "github",
            "typescript", "javascript", "nodejs", "esm", "cli",
            "lebedenko", "kirill", "js"
          ],
          "ignorePaths": [
            "node_modules/**",
            "dist/**",
            "coverage/**",
            "*.lock",
            "*.log"
          ]
        }
        EOF

        # Check spelling in markdown files
        cspell "**/*.md" || true

        # Check spelling in TypeScript files (comments only)
        cspell "**/*.ts" || true